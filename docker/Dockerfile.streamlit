FROM python:3.10-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install a newer version of SQLite3
RUN wget https://www.sqlite.org/2023/sqlite-autoconf-3420000.tar.gz \
    && tar zxvf sqlite-autoconf-3420000.tar.gz \
    && cd sqlite-autoconf-3420000 \
    && ./configure --prefix=/usr/local \
    && make \
    && make install \
    && cd .. \
    && rm -rf sqlite-autoconf-3420000 \
    && rm sqlite-autoconf-3420000.tar.gz

# Update library path to include the new SQLite3 installation
ENV LD_LIBRARY_PATH="/usr/local/lib:${LD_LIBRARY_PATH}"

# Set the working directory in the container
WORKDIR /app

# Copy requirements file
COPY requirements.txt .

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy the rest of the application
COPY . .

# Create wait-for-ollama script
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
host="$1"\n\
shift\n\
cmd="$@"\n\
\n\
until curl -s "http://$host/api/version"; do\n\
  >&2 echo "Ollama is unavailable - sleeping"\n\
  sleep 1\n\
done\n\
\n\
>&2 echo "Ollama is up - executing command"\n\
exec $cmd' > /app/wait-for-ollama.sh \
    && chmod +x /app/wait-for-ollama.sh

# Expose port 8501 for Streamlit web interface
EXPOSE 8501

# Healthcheck to ensure Streamlit is running
HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health

# Define the entry point with wait-for-ollama script
ENTRYPOINT ["/app/wait-for-ollama.sh", "ollama-container:11434", "streamlit", "run", "AchievementsAI.py", "--server.port=8501", "--server.address=0.0.0.0"]